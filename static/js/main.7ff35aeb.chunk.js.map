{"version":3,"sources":["components/PageNavigationLink/PageNavigationLink.tsx","components/NavigationBar/NavigationBar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavigationLink","to","text","className","isActive","classNames","NavigationBar","role","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","fetch","response","json","Loader","PersonLink","person","name","sex","slug","PeopleTable","people","selectedSlug","isError","length","map","born","died","motherName","fatherName","isSelected","selectedMother","find","p","selectedFather","motherNameValue","fatherNameValue","PeoplePage","useState","setPeople","setIsError","isLoading","setIsLoading","useParams","useEffect","getPeopleLoad","allPeople","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"qQASaA,EAAsC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACxD,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,8BAA+BD,GADtB,EAFb,SAMGF,GAGN,ECjBYI,EAA0B,WACrC,OACE,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAoBF,GAAG,IAAIC,KAAK,SAChC,cAAC,EAAD,CAAoBD,GAAG,SAASC,KAAK,iBAK9C,E,qBChBKM,EAAU,oEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,CAEM,SAAeI,IAAtB,+B,sDAAO,8GACCL,EAAK,KADN,uBAEkBM,MAAMP,GAFxB,cAECQ,EAFD,yBAIEA,EAASC,QAJX,4C,gCCPMC,EAAS,kBACpB,qBAAKf,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECOTgB,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1CC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,IACAC,EACEH,EADFG,KAGF,OACE,cAAC,IAAD,CACEtB,GAAE,kBAAasB,GACfpB,UAAWE,IAAW,CACpB,kBAA2B,MAARiB,IAHvB,SAMGD,GAGN,ECfYG,EAA+B,SAAC,GAItC,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,aAGA,OADI,EADJC,QAII,mBAAG,UAAQ,qBAAqBxB,UAAU,kBAA1C,kCAMCsB,EAAOG,OASV,wBACE,UAAQ,cACRzB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGsB,EAAOI,KAAI,SAAAT,GACV,IACEE,EAMEF,EANFE,IACAQ,EAKEV,EALFU,KACAC,EAIEX,EAJFW,KACAC,EAGEZ,EAHFY,WACAC,EAEEb,EAFFa,WACAV,EACEH,EADFG,KAGIW,EAAaX,IAASG,EACtBS,EAAiBV,EAAOW,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,OAASW,CAAf,IAC9BM,EAAiBb,EAAOW,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,OAASY,CAAf,IAC9BM,EAAkBP,GAAc,IAChCQ,EAAkBP,GAAc,IAEtC,OACE,qBACE,UAAQ,SAER9B,UAAWE,IAAW,CACpB,yBAA0B6B,IAJ9B,UAOE,6BACE,cAAC,EAAD,CAAYd,OAAQA,MAGtB,6BAAKE,IACL,6BAAKQ,IACL,6BAAKC,IAEL,6BACGI,EACG,cAAC,EAAD,CAAYf,OAAQe,IACpBI,IAGN,6BACGD,EACG,cAAC,EAAD,CAAYlB,OAAQkB,IACpBE,MAtBDjB,EA0BV,SApEH,mBAAG,UAAQ,kBAAX,8CAwEL,EC3FYkB,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOjB,EAAP,KAAekB,EAAf,KACA,EAA8BD,oBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAAsBC,cAAdxB,YAAR,MAAe,GAAf,EAkBA,OAhBAyB,qBAAU,WACR,IAAMC,EAAa,iDAAG,uHAEMnC,IAFN,OAEZoC,EAFY,OAIlBP,EAAUO,GAJQ,gDAMlBN,GAAW,GANO,yBAQlBE,GAAa,GARK,4EAAH,qDAYnBG,GACD,GAAE,IAGD,qCACE,oBAAI9C,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACG0C,EAEG,cAAC,EAAD,IAEA,cAAC,EAAD,CACEpB,OAAQA,EACRC,aAAcH,EACdI,QAASA,UAOxB,ECtCYwB,G,MAAgB,kBAC3B,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMhD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEiD,KAAK,IACLC,QAAS,oBAAIlD,UAAU,QAAd,yBAEX,cAAC,IAAD,CACEiD,KAAK,OACLC,QAAS,cAAC,IAAD,CAAUpD,GAAG,IAAIqD,SAAO,MAEnC,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAG/B,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAIlD,UAAU,QAAd,uCAtBQ,GCH7BqD,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.7ff35aeb.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavigationLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { PageNavigationLink } from '../PageNavigationLink';\n\nexport const NavigationBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavigationLink to=\"/\" text=\"Home\" />\n          <PageNavigationLink to=\"people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  await wait(500);\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <NavLink\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string,\n  isError: boolean,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedSlug,\n  isError,\n}) => {\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n          } = person;\n\n          const isSelected = slug === selectedSlug;\n          const selectedMother = people.find(p => p.name === motherName);\n          const selectedFather = people.find(p => p.name === fatherName);\n          const motherNameValue = motherName || '-';\n          const fatherNameValue = fatherName || '-';\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': isSelected,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {selectedMother\n                  ? <PersonLink person={selectedMother} />\n                  : motherNameValue}\n              </td>\n\n              <td>\n                {selectedFather\n                  ? <PersonLink person={selectedFather} />\n                  : fatherNameValue}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    const getPeopleLoad = async () => {\n      try {\n        const allPeople = await getPeople();\n\n        setPeople(allPeople);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPeopleLoad();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? (\n              <Loader />\n            ) : (\n              <PeopleTable\n                people={people}\n                selectedSlug={slug}\n                isError={isError}\n              />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { NavigationBar } from './components/NavigationBar';\nimport { PeoplePage } from './components/PeoplePage';\n\nimport './App.scss';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <NavigationBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}